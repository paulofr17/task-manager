generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model SubTask {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  description String
  completed   Boolean @default(false)
  user        User?   @relation(fields: [userId], references: [id])
  userId      String? @db.ObjectId
  task        Task    @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId      String  @db.ObjectId
}

model Task {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  description String
  dueDate     DateTime?
  completed   Boolean   @default(false)
  order       Int
  priority    Priority
  user        User?     @relation(fields: [userId], references: [id])
  userId      String?   @db.ObjectId
  section     Section   @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  sectionId   String    @db.ObjectId
  subTasks    SubTask[]
}

enum Priority {
  High
  Medium
  Low
}

model Section {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  order     Int
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String  @db.ObjectId
  tasks     Task[]
}

model Project {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  privacy     Privacy
  sections    Section[]
  users       User[]    @relation(fields: [userIds], references: [id])
  userIds     String[]  @db.ObjectId
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  workspaceId String    @db.ObjectId
}

enum Privacy {
  Public
  Private
}

model Workspace {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  projects Project[]
  users    User[]    @relation(fields: [userIds], references: [id])
  userIds  String[]  @db.ObjectId
}

model User {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  email        String      @unique
  name         String
  password     String?
  image        String?
  tasks        Task[]
  subTask      SubTask[]
  projects     Project[]   @relation(fields: [projectIds], references: [id])
  projectIds   String[]    @db.ObjectId
  workSpace    Workspace[] @relation(fields: [workSpaceIds], references: [id])
  workSpaceIds String[]    @db.ObjectId
}
