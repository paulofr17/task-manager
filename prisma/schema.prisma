generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Task {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  description String
  completed   Boolean @default(false)
  issue       Issue   @relation(fields: [issueId], references: [id], onDelete: Cascade)
  issueId     String  @db.ObjectId
}

model Issue {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  description String
  duration    String
  order       Int
  priority    Priority
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?  @db.ObjectId
  Column      Column   @relation(fields: [columnId], references: [id])
  columnId    String   @db.ObjectId
  tasks       Task[]
}

model Column {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  order   Int
  board   Board   @relation(fields: [boardId], references: [id])
  boardId String  @db.ObjectId
  issues  Issue[]
}

model Board {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  columns Column[]
  user    User?    @relation(fields: [userId], references: [id])
  userId  String?  @db.ObjectId
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String  @unique
  name     String?
  password String
  issues   Issue[]
  Board    Board[]
}

enum Priority {
  High
  Medium
  Low
}
